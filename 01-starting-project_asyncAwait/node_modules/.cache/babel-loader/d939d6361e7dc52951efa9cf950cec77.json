{"ast":null,"code":"var _jsxFileName = \"/home/usl-sz-410/trainingMaterial/codes/reactjs/01-starting-project _forHTTPS/01-starting-project_asyncAwait/src/App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  async function fetchMoviesHandler() {\n    setLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films\");\n    const data = await response.json();\n    const transformedMovies = data.results.map(moviesData => {\n      return {\n        id: moviesData.episode_id,\n        title: moviesData.title,\n        openingText: moviesData.opening_crawl,\n        releaseDate: moviesData.release_date\n      };\n    });\n    console.log(transformedMovies);\n    setMovies(transformedMovies);\n    setLoading(false); //setMovies(data.results);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"loading ...\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/usl-sz-410/trainingMaterial/codes/reactjs/01-starting-project _forHTTPS/01-starting-project_asyncAwait/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setLoading","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","moviesData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,UAAZ,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;;AAEA,iBAAeO,kBAAf,GAAoC;AAClCD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,UAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,UAAD,IAAgB;AACzD,aAAO;AACLC,QAAAA,EAAE,EAAED,UAAU,CAACE,UADV;AAELC,QAAAA,KAAK,EAAEH,UAAU,CAACG,KAFb;AAGLC,QAAAA,WAAW,EAAEJ,UAAU,CAACK,aAHnB;AAILC,QAAAA,WAAW,EAAEN,UAAU,CAACO;AAJnB,OAAP;AAMD,KAPyB,CAA1B;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,iBAAZ;AACAR,IAAAA,SAAS,CAACQ,iBAAD,CAAT;AACAN,IAAAA,UAAU,CAAC,KAAD,CAAV,CAfkC,CAgBlC;AACD;;AACD,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,iBAAc,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEGE,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFhB,CAJF,CADF;AAWD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  async function fetchMoviesHandler() {\n    setLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films\");\n    const data = await response.json();\n\n    const transformedMovies = data.results.map((moviesData) => {\n      return {\n        id: moviesData.episode_id,\n        title: moviesData.title,\n        openingText: moviesData.opening_crawl,\n        releaseDate: moviesData.release_date,\n      };\n    });\n    console.log(transformedMovies);\n    setMovies(transformedMovies);\n    setLoading(false);\n    //setMovies(data.results);\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={movies} />}\n        {isLoading && <p>loading ...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}