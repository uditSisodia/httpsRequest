{"ast":null,"code":"var _jsxFileName = \"/home/usl-sz-410/trainingMaterial/codes/reactjs/01-starting-project _forHTTPS/01-starting-project_asyncAwait/src/App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(null);\n\n  async function fetchMoviesHandler() {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong...\");\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(moviesData => {\n        return {\n          id: moviesData.episode_id,\n          title: moviesData.title,\n          openingText: moviesData.opening_crawl,\n          releaseDate: moviesData.release_date\n        };\n      });\n      console.log(transformedMovies);\n      setMovies(transformedMovies);\n      setLoading(false); //setMovies(data.results);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 45\n    }\n  }), !isLoading && movies.length === 0 && !isError && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"No movies found..\"), !isLoading && isError && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 35\n    }\n  }, isError), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  }, \"loading ...\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/usl-sz-410/trainingMaterial/codes/reactjs/01-starting-project _forHTTPS/01-starting-project_asyncAwait/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setLoading","isError","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","moviesData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","console","log","error","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,UAAZ,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,QAAV,IAAsBR,QAAQ,CAAC,IAAD,CAApC;;AACA,iBAAeS,kBAAf,GAAoC;AAClCH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,UAAD,IAAgB;AACzD,eAAO;AACLC,UAAAA,EAAE,EAAED,UAAU,CAACE,UADV;AAELC,UAAAA,KAAK,EAAEH,UAAU,CAACG,KAFb;AAGLC,UAAAA,WAAW,EAAEJ,UAAU,CAACK,aAHnB;AAILC,UAAAA,WAAW,EAAEN,UAAU,CAACO;AAJnB,SAAP;AAMD,OAPyB,CAA1B;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,iBAAZ;AACAZ,MAAAA,SAAS,CAACY,iBAAD,CAAT;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV,CAnBE,CAoBF;AACD,KArBD,CAqBE,OAAOuB,KAAP,EAAc;AACdrB,MAAAA,QAAQ,CAACqB,KAAK,CAACC,OAAP,CAAR;AACAxB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AACD,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,SAAD,IAAcF,MAAM,CAAC4B,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAE5B,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAAC4B,MAAP,KAAkB,CAAhC,IAAqC,CAACxB,OAAtC,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,EAKG,CAACF,SAAD,IAAcE,OAAd,iBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAJ,CAL5B,EAMGF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANhB,CAJF,CADF;AAeD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(null);\n  async function fetchMoviesHandler() {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong...\");\n      }\n\n      const data = await response.json();\n\n      const transformedMovies = data.results.map((moviesData) => {\n        return {\n          id: moviesData.episode_id,\n          title: moviesData.title,\n          openingText: moviesData.opening_crawl,\n          releaseDate: moviesData.release_date,\n        };\n      });\n      console.log(transformedMovies);\n      setMovies(transformedMovies);\n      setLoading(false);\n      //setMovies(data.results);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !isError && (\n          <p>No movies found..</p>\n        )}\n        {!isLoading && isError && <p>{isError}</p>}\n        {isLoading && <p>loading ...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}